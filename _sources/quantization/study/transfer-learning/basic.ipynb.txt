{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# 计算机视觉分类\n",
        "\n",
        "在本教程中，您将学习如何使用迁移学习训练卷积神经网络进行图像分类。你可以在 [cs231n notes](https://cs231n.github.io/transfer-learning/) 中阅读更多关于迁移学习的信息。\n",
        "\n",
        "```{note}\n",
        "在实践中，很少有人从零开始（使用随机初始化）训练整个卷积网络，因为拥有足够大的数据集是相对罕见的。相反，通常是在非常大的数据集（例如 ImageNet，包含 120 万张包含 1000 个类别的图像）上预训练卷积神经网络，然后使用卷积神经网络作为初始化或用于感兴趣的任务的固定特征提取器。\n",
        "```\n",
        "\n",
        "这两种主要的迁移学习场景如下：\n",
        "\n",
        "1. **微调 ConvNet**：该模型不是随机初始化，而是使用预训练的网络初始化，之后的训练照常进行，但使用不同的数据集。如果有不同数量的输出，通常也替换网络中的头（或它的一部分）。在这种方法中，通常将学习速率设置为较小的数值。之所以这样做，是因为网络已经经过了训练，只需要稍作修改就可以将其“微调”到新的数据集。\n",
        "\n",
        "2. **ConvNet 作为固定的特征提取器**：在这里，你 [“冻结”](https://arxiv.org/abs/1706.04983) 除了最后几个层（又名“头部”，通常是全连接的层）之外，网络中所有参数的权重。这些最后的层将被替换为新层，并初始化为随机权重，只有这些层会被训练。\n",
        "\n",
        "你也可以将以上两种方法结合使用：首先，你可以冻结特征提取器，训练头部。在此之后，您可以解冻特征提取器（或部分特征提取器），将学习速率设置为较小的值，然后继续训练。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.optim import lr_scheduler\n",
        "from torch.backends import cudnn\n",
        "import torchvision\n",
        "from torchvision import models\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "# 让程序在开始时花费一点额外时间，\n",
        "# 为整个网络的每个卷积层搜索最适合它的卷积实现算法，进而实现网络的加速。\n",
        "cudnn.benchmark = True\n",
        "\n",
        "plt.ion()   # 交互模式\n",
        "\n",
        "# 载入自定义模块\n",
        "from mod import load_mod\n",
        "load_mod()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{admonition} 任务\n",
        "训练对蚂蚁和蜜蜂进行分类的模型。\n",
        "```\n",
        "\n",
        "```{rubric} 加载数据\n",
        "```\n",
        "\n",
        "通常，如果从零开始训练，这是一个非常小的可泛化的数据集。由于使用迁移学习，应该能够相当好地推广。\n",
        "\n",
        "本文自定义数据加载器 {class}`~pytorch_book.datasets.examples.Hymenoptera`："
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {},
      "outputs": [],
      "source": [
        "from pytorch_book.datasets.examples import Hymenoptera\n",
        "# 加载数据\n",
        "loader = Hymenoptera('data/hymenoptera_data')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 训练模型\n",
        "```\n",
        "\n",
        "写一个通用函数 {func}`~tools.train_model` 来训练模型：\n",
        "\n",
        "-  调度学习率\n",
        "-  保存最佳模型"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {},
      "outputs": [],
      "source": [
        "from tools import train_model"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 可视化模型预测\n",
        "```\n",
        "\n",
        "{meth}`~xinet.ModuleTool.imshow` 显示预测的一些图像的通用函数："
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {},
      "outputs": [],
      "source": [
        "from xinet import ModuleTool, CV"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 设置设备\n",
        "```\n",
        "\n",
        "设置模型训练的设备："
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {},
      "outputs": [],
      "source": [
        "import torch\n",
        "\n",
        "device = torch.device(\"cuda:1\" if torch.cuda.is_available() else \"cpu\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 微调 ConvNet\n",
        "\n",
        "加载预训练模型，重置最终的全连接层。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "model_ft = models.resnet18(pretrained=True)\n",
        "num_ftrs = model_ft.fc.in_features\n",
        "# 这里每个输出样本的大小设置为 2。\n",
        "# 或者，它可以推广到 ``nn.Linear(num_ftrs, len(class_names))``。\n",
        "model_ft.fc = nn.Linear(num_ftrs, 2)\n",
        "criterion = nn.CrossEntropyLoss()\n",
        "\n",
        "# 观测所有被优化的参数\n",
        "optimizer_ft = optim.SGD(model_ft.parameters(), lr=0.001, momentum=0.9)\n",
        "\n",
        "# Decay LR by a factor of 0.1 every 7 epochs\n",
        "exp_lr_scheduler = lr_scheduler.StepLR(optimizer_ft, step_size=7, gamma=0.1)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 训练和评估\n",
        "```\n",
        "\n",
        "在 CPU 上应该需要大约 15-25 分钟。而在 GPU 上，这只需要不到一分钟的时间。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {},
      "outputs": [
        {
          "ename": "AttributeError",
          "evalue": "module 'collections' has no attribute 'Container'",
          "output_type": "error",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[1;32m/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb Cell 15'\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=0'>1</a>\u001b[0m train_iter \u001b[39m=\u001b[39m loader\u001b[39m.\u001b[39mdataloaders[\u001b[39m'\u001b[39m\u001b[39mtrain\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[1;32m      <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=1'>2</a>\u001b[0m test_iter \u001b[39m=\u001b[39m loader\u001b[39m.\u001b[39mdataloaders[\u001b[39m'\u001b[39m\u001b[39mval\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[0;32m----> <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=2'>3</a>\u001b[0m CV\u001b[39m.\u001b[39;49mtrain_fine_tuning(model_ft, train_iter, test_iter,\n\u001b[1;32m      <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=3'>4</a>\u001b[0m                      learning_rate\u001b[39m=\u001b[39;49m\u001b[39m1e-3\u001b[39;49m,\n\u001b[1;32m      <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=4'>5</a>\u001b[0m                      num_epochs\u001b[39m=\u001b[39;49m\u001b[39m25\u001b[39;49m,\n\u001b[1;32m      <a href='vscode-notebook-cell://ssh-remote%2B10.16.11.3/media/pc/data/4tb/xinet/web/pytorch-book/docs/quantization/study/transfer-learning/basic.ipynb#ch0000014vscode-remote?line=5'>6</a>\u001b[0m                      param_group\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m)\n",
            "File \u001b[0;32m/media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py:256\u001b[0m, in \u001b[0;36mCV.train_fine_tuning\u001b[0;34m(net, train_iter, test_iter, learning_rate, num_epochs, param_group)\u001b[0m\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=252'>253</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=253'>254</a>\u001b[0m     trainer \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39moptim\u001b[39m.\u001b[39mSGD(net\u001b[39m.\u001b[39mparameters(), lr\u001b[39m=\u001b[39mlearning_rate,\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=254'>255</a>\u001b[0m                               weight_decay\u001b[39m=\u001b[39m\u001b[39m0.001\u001b[39m)\n\u001b[0;32m--> <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=255'>256</a>\u001b[0m CV\u001b[39m.\u001b[39;49mtrain(net, train_iter, test_iter,\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=256'>257</a>\u001b[0m          loss, trainer, num_epochs,\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=257'>258</a>\u001b[0m          devices)\n",
            "File \u001b[0;32m/media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py:222\u001b[0m, in \u001b[0;36mCV.train\u001b[0;34m(net, train_iter, test_iter, loss, trainer, num_epochs, devices)\u001b[0m\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=219'>220</a>\u001b[0m \u001b[39mfor\u001b[39;00m i, (features, labels) \u001b[39min\u001b[39;00m \u001b[39menumerate\u001b[39m(train_iter):\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=220'>221</a>\u001b[0m     timer\u001b[39m.\u001b[39mstart()\n\u001b[0;32m--> <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=221'>222</a>\u001b[0m     l, acc \u001b[39m=\u001b[39m CV\u001b[39m.\u001b[39;49mtrain_batch(\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=222'>223</a>\u001b[0m         net, features, labels, loss, trainer, devices)\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=223'>224</a>\u001b[0m     metric\u001b[39m.\u001b[39madd(l, acc, labels\u001b[39m.\u001b[39mshape[\u001b[39m0\u001b[39m], labels\u001b[39m.\u001b[39mnumel())\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=224'>225</a>\u001b[0m     timer\u001b[39m.\u001b[39mstop()\n",
            "File \u001b[0;32m/media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py:200\u001b[0m, in \u001b[0;36mCV.train_batch\u001b[0;34m(net, X, y, loss, trainer, devices)\u001b[0m\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=197'>198</a>\u001b[0m pred \u001b[39m=\u001b[39m net(X)\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=198'>199</a>\u001b[0m l \u001b[39m=\u001b[39m loss(pred, y)\n\u001b[0;32m--> <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=199'>200</a>\u001b[0m l\u001b[39m.\u001b[39;49msum()\u001b[39m.\u001b[39;49mbackward()\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=200'>201</a>\u001b[0m trainer\u001b[39m.\u001b[39mstep()\n\u001b[1;32m    <a href='file:///media/pc/data/4tb/xinet/web/pytorch-book/docs/utils/xinet.py?line=201'>202</a>\u001b[0m train_loss_sum \u001b[39m=\u001b[39m l\u001b[39m.\u001b[39msum()\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py:363\u001b[0m, in \u001b[0;36mTensor.backward\u001b[0;34m(self, gradient, retain_graph, create_graph, inputs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=353'>354</a>\u001b[0m \u001b[39mif\u001b[39;00m has_torch_function_unary(\u001b[39mself\u001b[39m):\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=354'>355</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m handle_torch_function(\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=355'>356</a>\u001b[0m         Tensor\u001b[39m.\u001b[39mbackward,\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=356'>357</a>\u001b[0m         (\u001b[39mself\u001b[39m,),\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=360'>361</a>\u001b[0m         create_graph\u001b[39m=\u001b[39mcreate_graph,\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=361'>362</a>\u001b[0m         inputs\u001b[39m=\u001b[39minputs)\n\u001b[0;32m--> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/_tensor.py?line=362'>363</a>\u001b[0m torch\u001b[39m.\u001b[39;49mautograd\u001b[39m.\u001b[39;49mbackward(\u001b[39mself\u001b[39;49m, gradient, retain_graph, create_graph, inputs\u001b[39m=\u001b[39;49minputs)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py:173\u001b[0m, in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=167'>168</a>\u001b[0m     retain_graph \u001b[39m=\u001b[39m create_graph\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=169'>170</a>\u001b[0m \u001b[39m# The reason we repeat same the comment below is that\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=170'>171</a>\u001b[0m \u001b[39m# some Python versions print out the first line of a multi-line function\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=171'>172</a>\u001b[0m \u001b[39m# calls in the traceback and some print out the last line\u001b[39;00m\n\u001b[0;32m--> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=172'>173</a>\u001b[0m Variable\u001b[39m.\u001b[39;49m_execution_engine\u001b[39m.\u001b[39;49mrun_backward(  \u001b[39m# Calls into the C++ engine to run the backward pass\u001b[39;49;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=173'>174</a>\u001b[0m     tensors, grad_tensors_, retain_graph, create_graph, inputs,\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/__init__.py?line=174'>175</a>\u001b[0m     allow_unreachable\u001b[39m=\u001b[39;49m\u001b[39mTrue\u001b[39;49;00m, accumulate_grad\u001b[39m=\u001b[39;49m\u001b[39mTrue\u001b[39;49;00m)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py:253\u001b[0m, in \u001b[0;36mBackwardCFunction.apply\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py?line=248'>249</a>\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mRuntimeError\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39mImplementing both \u001b[39m\u001b[39m'\u001b[39m\u001b[39mbackward\u001b[39m\u001b[39m'\u001b[39m\u001b[39m and \u001b[39m\u001b[39m'\u001b[39m\u001b[39mvjp\u001b[39m\u001b[39m'\u001b[39m\u001b[39m for a custom \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py?line=249'>250</a>\u001b[0m                        \u001b[39m\"\u001b[39m\u001b[39mFunction is not allowed. You should only implement one \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py?line=250'>251</a>\u001b[0m                        \u001b[39m\"\u001b[39m\u001b[39mof them.\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py?line=251'>252</a>\u001b[0m user_fn \u001b[39m=\u001b[39m vjp_fn \u001b[39mif\u001b[39;00m vjp_fn \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m Function\u001b[39m.\u001b[39mvjp \u001b[39melse\u001b[39;00m backward_fn\n\u001b[0;32m--> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/autograd/function.py?line=252'>253</a>\u001b[0m \u001b[39mreturn\u001b[39;00m user_fn(\u001b[39mself\u001b[39;49m, \u001b[39m*\u001b[39;49margs)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:34\u001b[0m, in \u001b[0;36mBroadcast.backward\u001b[0;34m(ctx, *grad_outputs)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=31'>32</a>\u001b[0m \u001b[39m@staticmethod\u001b[39m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=32'>33</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mbackward\u001b[39m(ctx, \u001b[39m*\u001b[39mgrad_outputs):\n\u001b[0;32m---> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=33'>34</a>\u001b[0m     \u001b[39mreturn\u001b[39;00m (\u001b[39mNone\u001b[39;00m,) \u001b[39m+\u001b[39m ReduceAddCoalesced\u001b[39m.\u001b[39;49mapply(ctx\u001b[39m.\u001b[39;49minput_device, ctx\u001b[39m.\u001b[39;49mnum_inputs, \u001b[39m*\u001b[39;49mgrad_outputs)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:45\u001b[0m, in \u001b[0;36mReduceAddCoalesced.forward\u001b[0;34m(ctx, destination, num_inputs, *grads)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=40'>41</a>\u001b[0m ctx\u001b[39m.\u001b[39mtarget_gpus \u001b[39m=\u001b[39m [grads[i]\u001b[39m.\u001b[39mget_device() \u001b[39mfor\u001b[39;00m i \u001b[39min\u001b[39;00m \u001b[39mrange\u001b[39m(\u001b[39m0\u001b[39m, \u001b[39mlen\u001b[39m(grads), num_inputs)]\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=42'>43</a>\u001b[0m grads_ \u001b[39m=\u001b[39m [grads[i:i \u001b[39m+\u001b[39m num_inputs]\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=43'>44</a>\u001b[0m           \u001b[39mfor\u001b[39;00m i \u001b[39min\u001b[39;00m \u001b[39mrange\u001b[39m(\u001b[39m0\u001b[39m, \u001b[39mlen\u001b[39m(grads), num_inputs)]\n\u001b[0;32m---> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/_functions.py?line=44'>45</a>\u001b[0m \u001b[39mreturn\u001b[39;00m comm\u001b[39m.\u001b[39;49mreduce_add_coalesced(grads_, destination)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py:143\u001b[0m, in \u001b[0;36mreduce_add_coalesced\u001b[0;34m(inputs, destination, buffer_size)\u001b[0m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=140'>141</a>\u001b[0m \u001b[39mfor\u001b[39;00m chunks \u001b[39min\u001b[39;00m \u001b[39mzip\u001b[39m(\u001b[39m*\u001b[39mitrs):\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=141'>142</a>\u001b[0m     flat_tensors \u001b[39m=\u001b[39m [_flatten_dense_tensors(chunk) \u001b[39mfor\u001b[39;00m chunk \u001b[39min\u001b[39;00m chunks]  \u001b[39m# (num_gpus,)\u001b[39;00m\n\u001b[0;32m--> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=142'>143</a>\u001b[0m     flat_result \u001b[39m=\u001b[39m reduce_add(flat_tensors, destination)\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=143'>144</a>\u001b[0m     \u001b[39mfor\u001b[39;00m t \u001b[39min\u001b[39;00m _unflatten_dense_tensors(flat_result, chunks[\u001b[39m0\u001b[39m]):\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=144'>145</a>\u001b[0m         \u001b[39m# The unflattened tensors do not share storage, and we don't expose\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=145'>146</a>\u001b[0m         \u001b[39m# base flat tensor anyways, so give them different version counters.\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=146'>147</a>\u001b[0m         \u001b[39m# See NOTE [ Version Counter in comm.*_coalesced ]\u001b[39;00m\n\u001b[1;32m    <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=147'>148</a>\u001b[0m         output\u001b[39m.\u001b[39mappend(t\u001b[39m.\u001b[39mdata)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py:96\u001b[0m, in \u001b[0;36mreduce_add\u001b[0;34m(inputs, destination)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=93'>94</a>\u001b[0m \u001b[39mif\u001b[39;00m nccl\u001b[39m.\u001b[39mis_available(inputs):\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=94'>95</a>\u001b[0m     result \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39mempty_like(inputs[root_index])\n\u001b[0;32m---> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=95'>96</a>\u001b[0m     nccl\u001b[39m.\u001b[39;49mreduce(inputs, output\u001b[39m=\u001b[39;49mresult, root\u001b[39m=\u001b[39;49mroot_index)\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=96'>97</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/nn/parallel/comm.py?line=97'>98</a>\u001b[0m     destination_device \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39mdevice(inputs[root_index]\u001b[39m.\u001b[39mdevice\u001b[39m.\u001b[39mtype, destination)\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py:72\u001b[0m, in \u001b[0;36mreduce\u001b[0;34m(inputs, output, root, op, streams, comms, outputs)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=64'>65</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mreduce\u001b[39m(inputs: Sequence[torch\u001b[39m.\u001b[39mTensor],\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=65'>66</a>\u001b[0m            output: Optional[Union[torch\u001b[39m.\u001b[39mTensor, Sequence[torch\u001b[39m.\u001b[39mTensor]]] \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m,\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=66'>67</a>\u001b[0m            root: \u001b[39mint\u001b[39m \u001b[39m=\u001b[39m \u001b[39m0\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=69'>70</a>\u001b[0m            comms\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, \u001b[39m*\u001b[39m,\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=70'>71</a>\u001b[0m            outputs: Optional[Sequence[torch\u001b[39m.\u001b[39mTensor]] \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m \u001b[39mNone\u001b[39;00m:\n\u001b[0;32m---> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=71'>72</a>\u001b[0m     _check_sequence_type(inputs)\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=72'>73</a>\u001b[0m     _output: torch\u001b[39m.\u001b[39mTensor\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=73'>74</a>\u001b[0m     \u001b[39mif\u001b[39;00m outputs \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n",
            "File \u001b[0;32m~/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py:51\u001b[0m, in \u001b[0;36m_check_sequence_type\u001b[0;34m(inputs)\u001b[0m\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=49'>50</a>\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_check_sequence_type\u001b[39m(inputs: Union[torch\u001b[39m.\u001b[39mTensor, Sequence[torch\u001b[39m.\u001b[39mTensor]]) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m \u001b[39mNone\u001b[39;00m:\n\u001b[0;32m---> <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=50'>51</a>\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39misinstance\u001b[39m(inputs, collections\u001b[39m.\u001b[39;49mContainer) \u001b[39mor\u001b[39;00m \u001b[39misinstance\u001b[39m(inputs, torch\u001b[39m.\u001b[39mTensor):\n\u001b[1;32m     <a href='file:///home/pc/xinet/anaconda3/envs/torchx/lib/python3.10/site-packages/torch/cuda/nccl.py?line=51'>52</a>\u001b[0m         \u001b[39mraise\u001b[39;00m \u001b[39mTypeError\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39mInputs should be a collection of tensors\u001b[39m\u001b[39m\"\u001b[39m)\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'collections' has no attribute 'Container'"
          ]
        },
        {
          "data": {
            "image/svg+xml": "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg height=\"170.777344pt\" version=\"1.1\" viewBox=\"0 0 240.554688 170.777344\" width=\"240.554688pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n <metadata>\n  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n   <cc:Work>\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n    <dc:date>2022-03-17T16:38:49.452724</dc:date>\n    <dc:format>image/svg+xml</dc:format>\n    <dc:creator>\n     <cc:Agent>\n      <dc:title>Matplotlib v3.4.0, https://matplotlib.org/</dc:title>\n     </cc:Agent>\n    </dc:creator>\n   </cc:Work>\n  </rdf:RDF>\n </metadata>\n <defs>\n  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"patch_1\">\n   <path d=\"M 0 170.777344 \nL 240.554688 170.777344 \nL 240.554688 0 \nL 0 0 \nz\n\" style=\"fill:none;\"/>\n  </g>\n  <g id=\"axes_1\">\n   <g id=\"patch_2\">\n    <path d=\"M 30.103125 146.899219 \nL 225.403125 146.899219 \nL 225.403125 10.999219 \nL 30.103125 10.999219 \nz\n\" style=\"fill:#ffffff;\"/>\n   </g>\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\">\n     <g id=\"line2d_1\">\n      <defs>\n       <path d=\"M 0 0 \nL 0 3.5 \n\" id=\"m3cd796ba6d\" style=\"stroke:#000000;stroke-width:0.8;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_1\">\n      <!-- 0.0 -->\n      <g transform=\"translate(22.151563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 2034 4250 \nQ 1547 4250 1301 3770 \nQ 1056 3291 1056 2328 \nQ 1056 1369 1301 889 \nQ 1547 409 2034 409 \nQ 2525 409 2770 889 \nQ 3016 1369 3016 2328 \nQ 3016 3291 2770 3770 \nQ 2525 4250 2034 4250 \nz\nM 2034 4750 \nQ 2819 4750 3233 4129 \nQ 3647 3509 3647 2328 \nQ 3647 1150 3233 529 \nQ 2819 -91 2034 -91 \nQ 1250 -91 836 529 \nQ 422 1150 422 2328 \nQ 422 3509 836 4129 \nQ 1250 4750 2034 4750 \nz\n\" id=\"DejaVuSans-30\" transform=\"scale(0.015625)\"/>\n        <path d=\"M 684 794 \nL 1344 794 \nL 1344 0 \nL 684 0 \nL 684 794 \nz\n\" id=\"DejaVuSans-2e\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_2\">\n     <g id=\"line2d_2\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"69.163125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_2\">\n      <!-- 0.2 -->\n      <g transform=\"translate(61.211563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 1228 531 \nL 3431 531 \nL 3431 0 \nL 469 0 \nL 469 531 \nQ 828 903 1448 1529 \nQ 2069 2156 2228 2338 \nQ 2531 2678 2651 2914 \nQ 2772 3150 2772 3378 \nQ 2772 3750 2511 3984 \nQ 2250 4219 1831 4219 \nQ 1534 4219 1204 4116 \nQ 875 4013 500 3803 \nL 500 4441 \nQ 881 4594 1212 4672 \nQ 1544 4750 1819 4750 \nQ 2544 4750 2975 4387 \nQ 3406 4025 3406 3419 \nQ 3406 3131 3298 2873 \nQ 3191 2616 2906 2266 \nQ 2828 2175 2409 1742 \nQ 1991 1309 1228 531 \nz\n\" id=\"DejaVuSans-32\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-32\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_3\">\n     <g id=\"line2d_3\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"108.223125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_3\">\n      <!-- 0.4 -->\n      <g transform=\"translate(100.271563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 2419 4116 \nL 825 1625 \nL 2419 1625 \nL 2419 4116 \nz\nM 2253 4666 \nL 3047 4666 \nL 3047 1625 \nL 3713 1625 \nL 3713 1100 \nL 3047 1100 \nL 3047 0 \nL 2419 0 \nL 2419 1100 \nL 313 1100 \nL 313 1709 \nL 2253 4666 \nz\n\" id=\"DejaVuSans-34\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-34\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_4\">\n     <g id=\"line2d_4\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"147.283125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_4\">\n      <!-- 0.6 -->\n      <g transform=\"translate(139.331563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 2113 2584 \nQ 1688 2584 1439 2293 \nQ 1191 2003 1191 1497 \nQ 1191 994 1439 701 \nQ 1688 409 2113 409 \nQ 2538 409 2786 701 \nQ 3034 994 3034 1497 \nQ 3034 2003 2786 2293 \nQ 2538 2584 2113 2584 \nz\nM 3366 4563 \nL 3366 3988 \nQ 3128 4100 2886 4159 \nQ 2644 4219 2406 4219 \nQ 1781 4219 1451 3797 \nQ 1122 3375 1075 2522 \nQ 1259 2794 1537 2939 \nQ 1816 3084 2150 3084 \nQ 2853 3084 3261 2657 \nQ 3669 2231 3669 1497 \nQ 3669 778 3244 343 \nQ 2819 -91 2113 -91 \nQ 1303 -91 875 529 \nQ 447 1150 447 2328 \nQ 447 3434 972 4092 \nQ 1497 4750 2381 4750 \nQ 2619 4750 2861 4703 \nQ 3103 4656 3366 4563 \nz\n\" id=\"DejaVuSans-36\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-36\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_5\">\n     <g id=\"line2d_5\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"186.343125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_5\">\n      <!-- 0.8 -->\n      <g transform=\"translate(178.391563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 2034 2216 \nQ 1584 2216 1326 1975 \nQ 1069 1734 1069 1313 \nQ 1069 891 1326 650 \nQ 1584 409 2034 409 \nQ 2484 409 2743 651 \nQ 3003 894 3003 1313 \nQ 3003 1734 2745 1975 \nQ 2488 2216 2034 2216 \nz\nM 1403 2484 \nQ 997 2584 770 2862 \nQ 544 3141 544 3541 \nQ 544 4100 942 4425 \nQ 1341 4750 2034 4750 \nQ 2731 4750 3128 4425 \nQ 3525 4100 3525 3541 \nQ 3525 3141 3298 2862 \nQ 3072 2584 2669 2484 \nQ 3125 2378 3379 2068 \nQ 3634 1759 3634 1313 \nQ 3634 634 3220 271 \nQ 2806 -91 2034 -91 \nQ 1263 -91 848 271 \nQ 434 634 434 1313 \nQ 434 1759 690 2068 \nQ 947 2378 1403 2484 \nz\nM 1172 3481 \nQ 1172 3119 1398 2916 \nQ 1625 2713 2034 2713 \nQ 2441 2713 2670 2916 \nQ 2900 3119 2900 3481 \nQ 2900 3844 2670 4047 \nQ 2441 4250 2034 4250 \nQ 1625 4250 1398 4047 \nQ 1172 3844 1172 3481 \nz\n\" id=\"DejaVuSans-38\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-38\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_6\">\n     <g id=\"line2d_6\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"225.403125\" xlink:href=\"#m3cd796ba6d\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_6\">\n      <!-- 1.0 -->\n      <g transform=\"translate(217.451563 161.497656)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 794 531 \nL 1825 531 \nL 1825 4091 \nL 703 3866 \nL 703 4441 \nL 1819 4666 \nL 2450 4666 \nL 2450 531 \nL 3481 531 \nL 3481 0 \nL 794 0 \nL 794 531 \nz\n\" id=\"DejaVuSans-31\" transform=\"scale(0.015625)\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-31\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-30\"/>\n      </g>\n     </g>\n    </g>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\">\n     <g id=\"line2d_7\">\n      <defs>\n       <path d=\"M 0 0 \nL -3.5 0 \n\" id=\"m56218daa88\" style=\"stroke:#000000;stroke-width:0.8;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"146.899219\"/>\n      </g>\n     </g>\n     <g id=\"text_7\">\n      <!-- 0.0 -->\n      <g transform=\"translate(7.2 150.698437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_2\">\n     <g id=\"line2d_8\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"119.719219\"/>\n      </g>\n     </g>\n     <g id=\"text_8\">\n      <!-- 0.2 -->\n      <g transform=\"translate(7.2 123.518437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-32\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_3\">\n     <g id=\"line2d_9\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"92.539219\"/>\n      </g>\n     </g>\n     <g id=\"text_9\">\n      <!-- 0.4 -->\n      <g transform=\"translate(7.2 96.338437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-34\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_4\">\n     <g id=\"line2d_10\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"65.359219\"/>\n      </g>\n     </g>\n     <g id=\"text_10\">\n      <!-- 0.6 -->\n      <g transform=\"translate(7.2 69.158437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-36\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_5\">\n     <g id=\"line2d_11\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"38.179219\"/>\n      </g>\n     </g>\n     <g id=\"text_11\">\n      <!-- 0.8 -->\n      <g transform=\"translate(7.2 41.978437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-30\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-38\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_6\">\n     <g id=\"line2d_12\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"30.103125\" xlink:href=\"#m56218daa88\" y=\"10.999219\"/>\n      </g>\n     </g>\n     <g id=\"text_12\">\n      <!-- 1.0 -->\n      <g transform=\"translate(7.2 14.798437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-31\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-2e\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-30\"/>\n      </g>\n     </g>\n    </g>\n   </g>\n   <g id=\"patch_3\">\n    <path d=\"M 30.103125 146.899219 \nL 30.103125 10.999219 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_4\">\n    <path d=\"M 225.403125 146.899219 \nL 225.403125 10.999219 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_5\">\n    <path d=\"M 30.103125 146.899219 \nL 225.403125 146.899219 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_6\">\n    <path d=\"M 30.103125 10.999219 \nL 225.403125 10.999219 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n  </g>\n </g>\n</svg>\n",
            "text/plain": [
              "<Figure size 252x180 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "train_iter = loader.dataloaders['train']\n",
        "test_iter = loader.dataloaders['val']\n",
        "CV.train_fine_tuning(model_ft, train_iter, test_iter,\n",
        "                     learning_rate=1e-3,\n",
        "                     num_epochs=25,\n",
        "                     param_group=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "model_ft = train_model(model_ft,\n",
        "                       loader,\n",
        "                       criterion,\n",
        "                       optimizer_ft,\n",
        "                       exp_lr_scheduler,\n",
        "                       num_epochs=25,\n",
        "                       device=device)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": [
        "for xs, _ in loader.dataloaders['val']:\n",
        "    break\n",
        "\n",
        "MT = ModuleTool(xs)\n",
        "MT.imshow(model_ft, loader.class_names, device,\n",
        "          num_rows=1, num_cols=4, scale=2);"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## ConvNet 作为固定的特征提取器\n",
        "\n",
        "在这里，需要冻结除了最后一层之外的所有网络。需要设置 ``requires_grad = False`` 来冻结参数，这样梯度就不会在 ``backward()`` 中计算出来。\n",
        "\n",
        "也可以阅读 [excluding-subgraphs-from-backward](https://pytorch.org/docs/notes/autograd.html#excluding-subgraphs-from-backward) 了解更多内容。\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "model_conv = torchvision.models.resnet18(pretrained=True)\n",
        "for param in model_conv.parameters():\n",
        "    param.requires_grad = False\n",
        "\n",
        "# 新构造模块的参数默认为 requires_grad=True\n",
        "num_ftrs = model_conv.fc.in_features\n",
        "model_conv.fc = nn.Linear(num_ftrs, 2)\n",
        "\n",
        "model_conv = model_conv.to(device)\n",
        "\n",
        "criterion = nn.CrossEntropyLoss()\n",
        "\n",
        "# 观察到只有最后一层的参数被优化，而不是之前。\n",
        "optimizer_conv = optim.SGD(model_conv.fc.parameters(), lr=0.001, momentum=0.9)\n",
        "\n",
        "# Decay LR by a factor of 0.1 every 7 epochs\n",
        "exp_lr_scheduler = lr_scheduler.StepLR(optimizer_conv, step_size=7, gamma=0.1)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 训练和评估\n",
        "```\n",
        "\n",
        "在 CPU 上，与之前的场景相比，这将花费大约一半的时间。这是预期的，因为梯度不需要计算的大多数网络。但是，forward 确实需要计算。"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": [
        "CV.train_fine_tuning(model_conv, train_iter, test_iter,\n",
        "                     learning_rate=1e-3,\n",
        "                     num_epochs=25,\n",
        "                     param_group=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "# model_conv = train_model(model_conv, loader, criterion, optimizer_conv,\n",
        "#                          exp_lr_scheduler, num_epochs=25, device=device)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{rubric} 可视化\n",
        "```"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "for xs, _ in loader.dataloaders['val']:\n",
        "    break\n",
        "\n",
        "MT = ModuleTool(xs)\n",
        "MT.imshow(model_ft, loader.class_names, device,\n",
        "          num_rows=1, num_cols=4, scale=2)\n",
        "plt.ioff()\n",
        "plt.show()"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
